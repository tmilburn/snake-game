<!DOCTYPE html>
<html>
<body>

<canvas id="snakeCanvas" width="384" height="260"
style="border:1px solid #c3c3c3;"></canvas>

<script>

var canvas = document.getElementById("snakeCanvas");
var ctx = canvas.getContext("2d");
ctx.scale(4, 4);
ctx.fillStyle = "#222";
ctx.strokeStyle = "#222";
ctx.beginPath();
ctx.rect(1, 10, 94, 54);
ctx.stroke();
const snakePattern = " ###"
                  + "# ##"
                  + "## #"
                  + "### ";
const emptyPattern = "    "
                   + "    "
                   + "    "
                   + "    ";
const foodPattern = " #  "
                  + "# # "
                  + " #  "
                  + "    ";
function drawGrid(pattern, x, y)
{
    // Clear the square
    ctx.fillStyle = "#fff";
    ctx.fillRect(2 + (x*4), 11 + (y*4), 4, 4);
    
    // Print the pattern
    ctx.fillStyle = "#222";
    for (var i = 0; i < pattern.length; i++)
    {
        var c = pattern.charAt(i);
        if(c == "#")
        {
            ctx.fillRect(2 + (x*4) + (i%4), 11 + (y*4) + Math.floor(i/4), 1, 1);
        }
    }
}

var lastPressedKey = "";

document.addEventListener('keydown', function(event) {
    var code = event.keyCode;
    switch(code) {
    case 37:
        lastPressedKey = 'LEFT';
        break;
    case 38:
        lastPressedKey = 'UP';
        break;
    case 39:
        lastPressedKey = 'RIGHT';
        break;
    case 40:
        lastPressedKey = 'DOWN';
        break;
    }
});

var direction = "RIGHT";

var tailIndex = 0;
var headIndex = 5;

var snakeX = new Uint8Array(new ArrayBuffer(300));
var snakeY = new Uint8Array(new ArrayBuffer(300));

snakeX[0] = 5
snakeX[1] = 6
snakeX[2] = 7
snakeX[3] = 8
snakeX[4] = 9
snakeX[5] = 10

snakeY[0] = 6
snakeY[1] = 6
snakeY[2] = 6
snakeY[3] = 6
snakeY[4] = 6
snakeY[5] = 6

var bitmap = new Uint8Array(new ArrayBuffer(23*13));
var emptyCells = 23*13;

function getBitmap(x, y)
{
    return bitmap[(y * 23) + x];
}
function setBitmap(variable, x, y)
{
    bitmap[(y * 23) + x] = variable;
}


for(var i = tailIndex; i <= headIndex; i++)
{
    drawGrid(snakePattern, snakeX[i], snakeY[i]);
    emptyCells--;
    setBitmap(1, snakeX[i], snakeY[i]);
}

var foodX;
var foodY;

function setFood()
{
    var searchNum = Math.floor(Math.random() * emptyCells);
    var i = 0;
    while(searchNum--)
    {
        i++;
        while(bitmap[i] == 1)
        {
            i++;
        }
    }
    foodX = i % 23;
    foodY = Math.floor(i / 23);
    drawGrid(foodPattern, foodX, foodY);
    setBitmap(1, foodX, foodY);
    emptyCells--;
}

setFood();
mainLoop();
function mainLoop()
{
    var keepRunning = true;
    var newHeadIndex = (headIndex + 1) % 300;
    // Get any new direction
    if(lastPressedKey == 'DOWN' && direction != 'UP')
    {
        direction = 'DOWN';
    }
    else if(lastPressedKey == 'UP' && direction != 'DOWN')
    {
        direction = 'UP';
    }
    else if(lastPressedKey == 'RIGHT' && direction != 'LEFT')
    {
        direction = 'RIGHT';
    }
    else if(lastPressedKey == 'LEFT' && direction != 'RIGHT')
    {
        direction = 'LEFT';
    }
    lastPressedKey = "";
    
    if(direction == 'DOWN')
    {
        snakeY[newHeadIndex] = (snakeY[headIndex] + 1) % 13;
        snakeX[newHeadIndex] = snakeX[headIndex];
    }
    else if(direction == 'UP')
    {
        snakeY[newHeadIndex] = snakeY[headIndex] - 1;
        if(snakeY[newHeadIndex] == 255)
        {
            snakeY[newHeadIndex] += 13;
        }
        snakeX[newHeadIndex] = snakeX[headIndex];
    }
    else if(direction == 'RIGHT')
    {
        snakeX[newHeadIndex] = (snakeX[headIndex] + 1) % 23;
        snakeY[newHeadIndex] = snakeY[headIndex];
    }
    else if(direction == 'LEFT')
    {
        snakeX[newHeadIndex] = snakeX[headIndex] - 1;
        if(snakeX[newHeadIndex] == 255)
        {
            snakeX[newHeadIndex] += 23;
        }
        snakeY[newHeadIndex] = snakeY[headIndex];
    }
    setBitmap(0, snakeX[tailIndex], snakeY[tailIndex]);
    var oldTailIndex = tailIndex;
    headIndex = newHeadIndex;
    if(snakeX[newHeadIndex] == foodX && snakeY[newHeadIndex] == foodY)
    {
        setBitmap(1, snakeX[newHeadIndex], snakeY[newHeadIndex]);
        setFood();
    }
    else if(getBitmap(snakeX[newHeadIndex], snakeY[newHeadIndex]) != 0)
    {
        gameOver();
        keepRunning = false;
    }
    else
    {
        setBitmap(1, snakeX[newHeadIndex], snakeY[newHeadIndex]);
        tailIndex = (tailIndex + 1) % 300;
    }
    if(keepRunning)
    {
        drawGrid(emptyPattern, snakeX[oldTailIndex], snakeY[oldTailIndex]);
        drawGrid(snakePattern, snakeX[newHeadIndex], snakeY[newHeadIndex]);
        setTimeout(mainLoop, 200);
    }
}

function gameOver()
{
    alert("Game Over");
}
</script>

</body>
</html>
